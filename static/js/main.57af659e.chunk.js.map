{"version":3,"sources":["components/List.tsx","components/Actions.tsx","api/loadGoods.ts","App.tsx","index.tsx"],"names":["List","goods","className","map","good","key","id","style","color","name","Actions","handleAll","handleFive","handleRed","type","onClick","loadGoods","fetch","then","response","json","App","state","isStarted","onShowAll","setState","onShowFive","sort","a","b","localeCompare","slice","onShowRed","filter","this","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAEaA,G,MAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC7B,wBAAIC,UAAU,QACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBAAIF,UAAU,OAAOG,IAAKD,EAAKE,GAAIC,MAAO,CAAEC,MAAOJ,EAAKI,QACrDJ,EAAKK,YCEDC,EAAuB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC5D,OACE,yBAAKX,UAAU,WACb,4BAAQA,UAAU,kBAAkBY,KAAK,SAASC,QAASJ,GAA3D,OACA,4BAAQT,UAAU,kBAAkBY,KAAK,SAASC,QAASH,GAA3D,WACA,4BAAQV,UAAU,kBAAkBY,KAAK,SAASC,QAASF,GAA3D,cCbOG,EAAY,WACvB,OAAOC,MAAM,yEACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCSlBC,EAAb,2MACEC,MAAQ,CACNrB,MAAO,GACPsB,WAAW,GAHf,EAMEC,UAAY,WACVR,IACGE,MAAK,SAAAjB,GACJ,EAAKwB,SAAS,CACZxB,QACAsB,WAAW,QAXrB,EAgBEG,WAAa,WACXV,IACGE,MAAK,SAAAjB,GAAK,OAAI,EAAKwB,SAAS,CAC3BxB,MAAOA,EACJ0B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEnB,KAAKqB,cAAcD,EAAEpB,SAAOsB,MAAM,EAAG,SApBjE,EAwBEC,UAAY,WACVhB,IACGE,MAAK,SAAAjB,GAAK,OAAI,EAAKwB,SAAS,CAC3BxB,MAAOA,EAAMgC,QAAO,SAAA7B,GAAI,MAAmB,QAAfA,EAAKI,eA3BzC,wEA+BY,IAAD,EACsB0B,KAAKZ,MAA1BrB,EADD,EACCA,MAAOsB,EADR,EACQA,UAEf,OACE,oCACE,kBAAC,EAAD,CACEZ,UAAWuB,KAAKV,UAChBZ,WAAYsB,KAAKR,WACjBb,UAAWqB,KAAKF,YAEhBT,EAEG,kBAAC,EAAD,CAAMtB,MAAOA,IADb,yBAAKC,UAAU,SAAf,2BA1Cb,GAAyBiC,aCPzBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.57af659e.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\nexport const List: FC<Goods> = ({ goods }) => (\n  <ul className=\"list\">\n    {goods.map(good => (\n      <li className=\"item\" key={good.id} style={{ color: good.color }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { FC } from 'react';\n\ninterface Methods {\n  handleAll: () => void;\n  handleFive: () => void;\n  handleRed: () => void;\n}\n\nexport const Actions: FC<Methods> = ({ handleAll, handleFive, handleRed }) => {\n  return (\n    <div className=\"actions\">\n      <button className=\"actions__button\" type=\"button\" onClick={handleAll}>All</button>\n      <button className=\"actions__button\" type=\"button\" onClick={handleFive}>5 first</button>\n      <button className=\"actions__button\" type=\"button\" onClick={handleRed}>Red only</button>\n    </div>\n  );\n};\n","export const loadGoods = (): Promise<Good[]> => {\n  return fetch('https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json')\n    .then(response => response.json());\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport { List } from './components/List';\nimport { Actions } from './components/Actions';\nimport { loadGoods } from './api/loadGoods';\n\ninterface State {\n  goods: Good[];\n  isStarted: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    goods: [],\n    isStarted: false,\n  };\n\n  onShowAll = () => {\n    loadGoods()\n      .then(goods => {\n        this.setState({\n          goods,\n          isStarted: true,\n        });\n      });\n  };\n\n  onShowFive = () => {\n    loadGoods()\n      .then(goods => this.setState({\n        goods: goods\n          .sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5),\n      }));\n  };\n\n  onShowRed = () => {\n    loadGoods()\n      .then(goods => this.setState({\n        goods: goods.filter(good => good.color === 'red'),\n      }));\n  };\n\n  render() {\n    const { goods, isStarted } = this.state;\n\n    return (\n      <>\n        <Actions\n          handleAll={this.onShowAll}\n          handleFive={this.onShowFive}\n          handleRed={this.onShowRed}\n        />\n        {!isStarted\n          ? (<div className=\"start\">Press All to start</div>)\n          : (<List goods={goods} />)}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}